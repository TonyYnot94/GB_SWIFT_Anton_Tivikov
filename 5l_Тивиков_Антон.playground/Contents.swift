import UIKit

enum StartStopEngine : CustomStringConvertible {
    case start , stop
    var description: String {
        switch self {
        case .start : return "–í–∫–ª—é—á–µ–Ω"
        case .stop : return "–í—ã–∫–ª—é—á–µ–Ω"
        }
    }
}

enum OpenCloseWindows : CustomStringConvertible{
    case open , close
    var description: String{
        switch self{
        case .open : return "–û—Ç–∫—Ä—ã—Ç—ã"
        case . close : return "–ó–∞–∫—Ä—ã—Ç—ã"
        }
    }
}

protocol Car : AnyObject {
    
    var mark : String {get}
    var model : String {get}
    var date : Int {get}
    var mileage : Double {get set}
    var engine : StartStopEngine {get set}
    var windows : OpenCloseWindows {get set}
    
}
extension Car {
    
    func startEngine(){
        if engine == .start {
            print("\n–î–≤–∏–≥–∞—Ç–µ–ª—å —É–∂–µ –≤–∫–ª—é—á–µ–Ω")
        }else{
            engine = .start
            print("\n–î–≤–∏–≥–∞—Ç–µ–ª—å –≤–∫–ª—é—á–µ–Ω")
        }
    }
    func stopEngine(){
        if engine == .stop {
            print("\n–î–≤–∏–≥–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω")
        }else{
            engine = .stop
            print("\n–î–≤–∏–≥–∞—Ç–µ–ª—å –≤—ã–∫–ª—é—á–µ–Ω")
        }
    }
    func openWindows(){
        if windows == .open {
            print("\n–û–∫–Ω–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—ã")
        }else{
            windows = .open
            print("\n–û–∫–Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã")
        }
    }
    func closeWindows(){
        if windows == .close {
            print("\n–û–∫–Ω–∞ —É–∂–µ –∑–∞–∫—Ä—ã—Ç—ã")
        }else{
            windows = .close
            print("\n–û–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã")
        }
    }
}

//
//
//
//  –ö–ª–∞—Å—Å —Å–ø–æ—Ä—Ç–∫–∞—Ä

class SportCar : Car {
    var model: String
    var windows: OpenCloseWindows
    var engine: StartStopEngine
    var mark: String
    var date: Int
    var mileage: Double
    
    init (mark : String, model : String , date : Int , mileage : Double , windows : OpenCloseWindows , engine : StartStopEngine){
        self.mark = mark
        self.model = model
        self.date = date
        self.mileage = mileage
        self.windows = windows
        self.engine = engine
    }
    
    func discription() {
        print("\nüöò\n–ú–∞—à–∏–Ω–∞ –º–∞—Ä–∫–∏ : \(mark)\n–ú–æ–¥–µ–ª—å : \(model)\n–ü—Ä–æ–±–µ–≥ : \(mileage)\n–û–∫–Ω–∞ : \(windows)\n–î–≤–∏–≥–∞—Ç–µ–ª—å : \(engine)\n_________________________________")
    }
}

var car1 = SportCar(mark: "Audi", model: "A6", date: 1999, mileage: 243001.2, windows: .close, engine: .stop)

car1.discription()
car1.openWindows()
car1.startEngine()
car1.discription()
car1.startEngine()

//
//
//
//–ì—Ä—É–∑–æ–≤–∏–∫
enum Pricep : CustomStringConvertible{
    case yes , no
    var description: String{
        switch self{
        case .yes : return "–ï—Å—Ç—å –ø—Ä–∏—Ü–µ–ø"
        case .no : return "–ù–µ—Ç –ø—Ä–∏—Ü–µ–ø–∞"
        }
    }
}

class TrunkCar : Car {
    var mark: String
    var model: String
    var date: Int
    var mileage: Double
    var engine: StartStopEngine
    var windows: OpenCloseWindows
    var pricep : Pricep
    
    init (mark : String, model : String , date : Int , mileage : Double , windows : OpenCloseWindows , engine : StartStopEngine , pricep : Pricep){
        self.mark = mark
        self.model = model
        self.date = date
        self.mileage = mileage
        self.windows = windows
        self.engine = engine
        self.pricep = pricep
    }
    
    func OffPricep(){
        if pricep == .yes {
            print("\n–ü—Ä–∏—Ü–µ–ø –æ—Ç—Å–æ–µ–¥–∏–Ω–µ–Ω")
            pricep = .no
        }else{
            print("\n–£ —ç—Ç–æ–≥–æ –≥—Ä—É–∑–æ–≤–∏–∫–∞ –Ω–µ—Ç –ø—Ä–∏—Ü–µ–ø–∞")
        }
    }
    func OnPricep() {
        if pricep == .yes {
            print("\n–ü—Ä–∏—Ü–µ–ø —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω")
        }else{
            pricep = .yes
            print("\n–ü—Ä–∏—Ü–µ–ø –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω")
        }
    }
    
    func discription() {
        print("\nüöö\n–ú–∞—à–∏–Ω–∞ –º–∞—Ä–∫–∏ : \(mark)\n–ú–æ–¥–µ–ª—å : \(model)\n–ü—Ä–æ–±–µ–≥ : \(mileage)\n–û–∫–Ω–∞ : \(windows)\n–î–≤–∏–≥–∞—Ç–µ–ª—å : \(engine)\n–ü—Ä–∏—Ü–µ–ø : \(pricep)\n_________________________________")
    }
}


var truck1 = TrunkCar(mark: "Kamaz", model: "4123884-04", date: 2008, mileage: 233450.55, windows: .close, engine: .stop, pricep: .no)

truck1.discription()
truck1.OnPricep()
truck1.openWindows()
truck1.startEngine()
truck1.discription()
truck1.OffPricep()
truck1.discription()

//1. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª –∏ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –æ–±—â–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è. +
//
//2. –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ ¬´Car¬ª –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –Ω–∏—Ö –º–µ—Ç–æ–¥—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º: –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ, –∑–∞–ø—É—Å—Ç–∏—Ç—å/–∑–∞–≥–ª—É—à–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –∏ —Ç.–¥. (–ø–æ –æ–¥–Ω–æ–º—É –º–µ—Ç–æ–¥—É –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ª–µ–¥—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –¥–µ–π—Å—Ç–≤–∏—è, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–±—â–∞—è –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π). +
//
//3. –°–æ–∑–¥–∞—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª - trunkCar –∏ sport–°ar. –û–ø–∏—Å–∞—Ç—å –≤ –Ω–∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞, –æ—Ç–ª–∏—á–∞—é—â–∏–µ—Å—è –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ —Ü–∏—Å—Ç–µ—Ä–Ω—ã.
//
//4. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–µ–µ –ø—Ä–æ—Ç–æ–∫–æ–ª CustomStringConvertible.
//

